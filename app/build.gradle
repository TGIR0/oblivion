plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'org.bepass.oblivion'
    compileSdk 36  // Android 16 (API 36)
    ndkVersion "26.1.10909125"
    defaultConfig {
        applicationId "org.bepass.oblivion"
        minSdk 24  // Android 7.0, balanced for compatibility without restrictions
        targetSdk 36
        versionCode 18
        versionName "8"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    androidResources {
        generateLocaleConfig true
    }
    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17  // Latest supported in Android, as Java 25 is not fully compatible yet
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    lint {
        baseline = file("lint-baseline.xml")
    }
}

configurations {
    configureEach {
        exclude group: 'org.json', module: 'json'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'  // Latest
    implementation 'com.google.android.material:material:1.12.0'  // Latest, includes SwitchMaterial for replacement
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'  // Latest
    // Removed com.github.zcweng:switch-button:0.0.3@aar - replaced with Material Switch in code if needed
    implementation 'androidx.recyclerview:recyclerview:1.3.2'  // Latest
    implementation 'com.github.bumptech.glide:glide:4.16.0'  // Latest
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'  // Latest
    implementation 'com.github.erfansn:locale-config-x:1.0.1'  // Assuming latest, check if newer exists
    implementation 'com.tencent:mmkv:1.3.8'  // Latest version supporting 32-bit
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'])
}

static def findGoExecutable() {
    def isWindows = System.getProperty("os.name").toLowerCase().contains("win")
    def exe = isWindows ? "go.exe" : "go"
    try {
        def proc = [exe, "version"].execute()
        proc.waitFor()
        if (proc.exitValue() == 0) {
            return exe
        }
    } catch (Exception ignored) {}
    throw new GradleException("Go executable not found in PATH. Install Go 1.25.x and ensure 'go' is on PATH.")
}

static def findGomobileExecutable(goExec) {
    // Deprecated: we now use 'go run golang.org/x/mobile/cmd/gomobile' for cross-platform support.
    return null
}

def goExec = findGoExecutable()

tasks.register("preBuildTun2SocksAar", Exec) {
    workingDir "../tun2socks"
    environment "CGO_ENABLED", "1"
    commandLine goExec, "run", "golang.org/x/mobile/cmd/gomobile", "init"
}

tasks.register("buildTun2SocksAar", Exec) {
    doFirst {
        File myDir = new File("$projectDir/libs")
        if (!myDir.exists()) {
            myDir.mkdirs()
        }
    }

    workingDir "../tun2socks"
    environment "CGO_ENABLED", "1"
    commandLine goExec, "run", "golang.org/x/mobile/cmd/gomobile", "bind",
            "-ldflags=-w -s",
            "-target=android",
            "-androidapi=$android.defaultConfig.minSdk",  // Updated to minSdk 24
            "-o=$projectDir/libs/tun2socks.aar", "."

    dependsOn(preBuildTun2SocksAar)
}

preBuild.dependsOn(buildTun2SocksAar)